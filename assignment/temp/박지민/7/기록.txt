# dir 객체가 가지고 있는 속성 기능을 list 타입으로 return 해준다
#  I D E => 통합개발환경



# 소문자 시작은 함수 ,   대문자는 클래스
# if __name__ == "__main__":
#     fs = FirstSection()
#     result = fs.first()
#     print(result)
#     print(fs.first().__doc__)


# from sec02.section2 import

# print(os.getcwd())
# path
# os에게 경로를 알려준다
# 베터리 인클루디드

# from exam.exam import 성적처리
#
# # score = int(input('성적을 입력하시오'))
# # print(성적처리(score))
#
#
# if __name__ == "__main__":
#     print("성적을 입력하세요")
#     사용자가입력한성적 = int(input("성적입력: "))
#     결과 = 성적처리(사용자가입력한성적)
#     print(f'당신의 성적등급은 {결과}입니다')

#
# for i in range(20):
#     print(i)




# for (int i; i<길이; i++) {
#     print()
# }
#
# 과일들 = ['사과','배']
#
# for i,과일 in enumerate(과일들):
#     print(f'{i+1}번째 과일이름은 {과일} 입니다')
#
# n=5
# while n<8:
#     print(f'변수 n의 값은 {n}')
#     n+=1

# print(' 구구단을 외자! ')
# for i in range(1,10):
#     for j in range(1,10):
#         print(f'{i}X{j} = {i*j}')
#
# i=1
# j=1
# while i<10:
#     while j<10:
#         print(f'{i}X{j} = {i * j}')
#         j += 1
#     j=1
#     i+=1
#

# 바다코끼리 연산자

import random

def lottery(goods):
    if item := random.choice(goods):
        return item
    else:
        return 'Miss'

books = ['a','b','c', None]

print(lottery(books))

try:
    import tifff
except Exception as e:
    print(e)

#  부분 실행 할 때 드래그로 잡고 shift + Alt + E

from io import UnsupportedOperation

f = open('some.txt', 'w')
try:
    f.read()

except UnsupportedOperation as e:
    print(f'예외가 발생했습니다: {e}')
finally:
    print('파일을 닫습니다')
    f.close()

클래스 변수
클래스 매소드

인스턴스를 지정하지않고 클래스 자체를 지칭
클래스 안에서 값을 공유할 필요가 있을때



















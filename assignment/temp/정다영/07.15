파이썬은 유연한 언어 인터프리터 언어임
진입점 메인 파일을 만들지 않고 이용가능
구조화를 해나가는 걸 알아야함.
클래스화

#진입점
#파일 이름을 main 또는 runner.py로 해도 됨.
#파이썬 인터프리터가 이 파일을 직접 실행시키면

#function
#간략화를 선호함

#선언부
#컨드롤 역슬래시 - 주석
#클래스는 대문자 시작
#함수는 소문자 시작

from first_section.variable import 처음만든함수#()가 생략되어있음 사실 괄호는 연산자임
from second.ifffff import 두번째만든함수
from third.ieeee import 세번째만든함수

if __name__ == "__main__": #무조건 쓰고 시작하는 것임.
    #호출
    결과 = 처음만든함수() #인터프리터가 보고 패키지로 인식해줌
    결과2 = 두번째만든함수()
    결과3 = 세번째만든함수()

    print(결과)
    print(결과2)
    print(결과3)

#함수 -> 클래스화
#클래스 안에 있는 함수를 메소드라 한다.
#클래스는 바로 쓸 수도 있는데 인스턴스화를 해서 써야 함.

#_언더스코어, __더블언더스코어(던더)
#보통 만지지마, 특별해, 상수(불변성)
#던더메소드, 스페셜메소드, 매직메소드
#매직메소드 - __init__

#_하나는 상수처럼 취급하지만 파이썬 특성상 잘 접근을 하는 유동성이 있는 언어임.


#docstring, typeint에 대한 개념 알기
from sec02.sec02_01 import Sec02_01
from first_section.variable import FirstSection #()가 생략되어있음 사실 괄호는 연산자임
import this
if __name__ == "__main__": #무조건 쓰고 시작하는 것임.
   fs = FirstSection()
   결과 = fs.처음만든함수()
   print(결과)
   print(fs.처음만든함수().__doc__)

#공간이 패키지임을 알려줌.
#모듈이란 py파일 하나 자체를 모듈이라고 함.
#py파일이 모여있으면 패키지라고 함.

# 함수 -> 클래스화
# 클래스 안에 있는 함수를 메소드라 한다.
# 클래스는 바로 쓸 수도 있는데 인스턴스화를 해서 써야 함.

# _언더스코어, __더블언더스코어(던더)
# 보통 만지지마, 특별해, 상수(불변성)
# 던더메소드, 스페셜메소드, 매직메소드
# 매직메소드 - __init__

# _하나는 상수처럼 취급하지만 파이썬 특성상 잘 접근을 하는 유동성이 있는 언어임.

# 동적 타입 언어 타입 x 변수 : 타입에 대해 좀 더 자유로운 언어
# 정적 타입 언어 타입 o 변수

# [] 대괄호, {} 중괄호, () 괄호, <> 제네릭
# ctrl + alt + L - formating하는 단축키

import os  # 모듈은 py파일임.
from helpers.debug import *


class Sec02_01:
    # 쌤파이썬
    # 배터리 인플루디드(가지고있는 언어라는 의미임.)
    @staticmethod

    def_Sec02_01_01():
    print(os.environ)


@staticmethod


def_Sec02_01_01():
print(os.getcwd())
# path
# os에게 경로를 알려준다.

# 하이픈 -v
# 통용되는 규책
# -- 풀네임 --version
# - 축약형
# -v 버전 축약

# -version

# 진입점
# 파일 이름을 main 또는 runner.py로 해도 됨.
# 파이썬 인터프리터가 이 파일을 직접 실행시키면
import os

# function
# 간략화를 선호함

# 선언부
# 컨드롤 역슬래시 - 주석
# 클래스는 대문자 시작
# 함수는 소문자 시작

# docstring, typeint에 대한 개념 알기
from sec02.sec02_01 import Sec02_01
from first_section.variable import FirstSection  # ()가 생략되어있음 사실 괄호는 연산자임
import this

if __name__ == "__main__":  # 무조건 쓰고 시작하는 것임.
    Sec02_01.Sec02_01_01()
    Sec02_01.Sec
    print(sec02_01)
    # 내장함수 빌트인함수
    # 내가 정의하진 않았어
    # 미리다 만들어놓음
    # type() 내장 함수가 아니라 클래스임(원칙적으로)
    print(type(os.getcwd()))
# 파이썬에서도 타입을 자주 찍어보는게 좋음
# 타입을 확인하면서 코딩하기!
# 원시타입 프리미티브타입스 레퍼런스타입
# 원시타임 - int, float, bool, str : 원시타입은 type캐스팅

# 파이썬은 동적 타입임.

# 암묵적(묵시적) 변환 -> 타입 캐스팅을 의미함.
# 명시적 변환 -> 개발자가 해줌. : 타입 컨버젼이라고 함

a = "100"
pp(a)
a = int(a)
print(a)
pp(dir("문자열"))
#dir은 객체가 가지고 있는 속성 기능을 리스트 타입으로 리턴해준다.
#IDE는 통합 개발 환경으로
"문자열".